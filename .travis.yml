sudo: required
language: node_js
node_js: "8"

script: skip

jobs:
  include:
    - stage: Lint
      script:
        - cd $TRAVIS_BUILD_DIR/client && npm install && npm run lint
        - cd $TRAVIS_BUILD_DIR/server && npm install && npm run lint

    - stage: Audit
      script:
#        - cd $TRAVIS_BUILD_DIR/client && npm audit --production
        - cd $TRAVIS_BUILD_DIR/server && npm audit --production

    - stage: Tests
      script: echo "No tests at the moment"

    - stage: Build and push image
      services:
        - docker
      install: skip
      before_script:
        - docker build -t tyslinchain/tyslinscan-server -f Dockerfile.server .
        - docker build -t tyslinchain/tyslinscan-client -f Dockerfile.client .
      script:
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker tag tyslinchain/tyslinscan-server tyslinchain/tyslinscan-server:latest
        - docker push tyslinchain/tyslinscan-server:latest
        - docker tag tyslinchain/tyslinscan-server tyslinchain/tyslinscan-server:$TRAVIS_BUILD_ID
        - docker push tyslinchain/tyslinscan-server:$TRAVIS_BUILD_ID
        - docker tag tyslinchain/tyslinscan-client tyslinchain/tyslinscan-client:latest
        - docker push tyslinchain/tyslinscan-client:latest
        - docker tag tyslinchain/tyslinscan-client tyslinchain/tyslinscan-client:$TRAVIS_BUILD_ID
        - docker push tyslinchain/tyslinscan-client:$TRAVIS_BUILD_ID

    - stage: Build and push image (tagged)
      services:
        - docker
      install: skip
      before_script:
        - docker build -t tyslinchain/tyslinscan-server -f Dockerfile.server .
        - docker build -t tyslinchain/tyslinscan-client -f Dockerfile.client .
      script:
        - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
        - docker tag tyslinchain/tyslinscan-server tyslinchain/tyslinscan-server:latest
        - docker push tyslinchain/tyslinscan-server:latest
        - docker tag tyslinchain/tyslinscan-server tyslinchain/tyslinscan-server:testnet
        - docker push tyslinchain/tyslinscan-server:testnet
        - docker tag tyslinchain/tyslinscan-server tyslinchain/tyslinscan-server:$TRAVIS_TAG
        - docker push tyslinchain/tyslinscan-server:$TRAVIS_TAG
        - docker tag tyslinchain/tyslinscan-client tyslinchain/tyslinscan-client:latest
        - docker push tyslinchain/tyslinscan-client:latest
        - docker tag tyslinchain/tyslinscan-client tyslinchain/tyslinscan-client:testnet
        - docker push tyslinchain/tyslinscan-client:testnet
        - docker tag tyslinchain/tyslinscan-client tyslinchain/tyslinscan-client:$TRAVIS_TAG
        - docker push tyslinchain/tyslinscan-client:$TRAVIS_TAG

    - stage: Deploy in devnet
      install: skip
      before_script:
        - openssl aes-256-cbc -K $encrypted_b7545dd42371_key -iv $encrypted_b7545dd42371_iv -in travis.pem.enc -out travis.pem -d
        - eval "$(ssh-agent -s)"
        - chmod 600 ./travis.pem
        - echo -e "Host $DEVNET_SSH_IP\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
        - ssh-add ./travis.pem
      script:
        - ssh -i ./travis.pem -l $DEVNET_SSH_USER $DEVNET_SSH_IP docker service update --image tyslinchain/tyslinscan-client:latest devnet-main_tyslinscan 1> /dev/null
        - ssh -i ./travis.pem -l $DEVNET_SSH_USER $DEVNET_SSH_IP docker service update --image tyslinchain/tyslinscan-server:latest devnet-main_tyslinscan_crawler 1> /dev/null
        - ssh -i ./travis.pem -l $DEVNET_SSH_USER $DEVNET_SSH_IP docker service update --image tyslinchain/tyslinscan-server:latest devnet-main_tyslinscan_server 1> /dev/null
        - ssh -i ./travis.pem -l $DEVNET_SSH_USER $DEVNET_SSH_IP docker service update --image tyslinchain/tyslinscan-server:latest devnet-main_tyslinscan_pending_txs 1> /dev/null
      after_success:
        -  'curl -X POST --data-urlencode "payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[devnet] Deployment succeeded\",\"pretext\":\"\",\"color\":\"good\",\"fields\":[{\"title\":\"[devnet] TyslinScan\",\"value\":\"Deployment succeeded.\",\"short\":true}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'
      after_failure:
        -  'curl -X POST --data-urlencode "payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[devnet] Deployment failed\",\"pretext\":\"\",\"color\":\"danger\",\"fields\":[{\"title\":\"[devnet] TyslinScan\",\"value\":\"Deployment failed.\",\"short\":false}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'

    - stage: Deploy in testnet
      install: skip
      before_script:
        - openssl aes-256-cbc -K $encrypted_b7545dd42371_key -iv $encrypted_b7545dd42371_iv -in travis.pem.enc -out travis.pem -d
        - eval "$(ssh-agent -s)"
        - chmod 600 ./travis.pem
        - echo -e "Host $TESTNET_SSH_IP\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
        - ssh-add ./travis.pem
      script:
        - ssh -i ./travis.pem -l $TESTNET_SSH_USER $TESTNET_SSH_IP docker service update --image tyslinchain/tyslinscan-client:testnet testnet_tyslinscan 1> /dev/null
        - ssh -i ./travis.pem -l $TESTNET_SSH_USER $TESTNET_SSH_IP docker service update --image tyslinchain/tyslinscan-server:testnet testnet_tyslinscan_crawler 1> /dev/null
        - ssh -i ./travis.pem -l $TESTNET_SSH_USER $TESTNET_SSH_IP docker service update --image tyslinchain/tyslinscan-server:testnet testnet_tyslinscan_server 1> /dev/null
      after_success:
        -  'curl -X POST --data-urlencode "payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[testnet] Deployment succeeded\",\"pretext\":\"\",\"color\":\"good\",\"fields\":[{\"title\":\"[testnet] TyslinScan\",\"value\":\"Deployment succeeded.\",\"short\":true}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'
      after_failure:
        -  'curl -X POST --data-urlencode "payload={\"channel\": \"#deployments\", \"username\": \"Travis\", \"attachments\":[{\"fallback\":\"[testnet] Deployment failed\",\"pretext\":\"\",\"color\":\"danger\",\"fields\":[{\"title\":\"[testnet] TyslinScan\",\"value\":\"Deployment failed.\",\"short\":false}]}], \"icon_emoji\": \":male-construction-worker:\"}" $SLACK_DEPLOY_URL'

stages:
  - name: Lint
  - name: Audit
  - name: Tests
  - name: Build and push image
    if: type != pull_request AND branch = master AND tag IS blank AND repo = tyslinchain/tyslinscan
  - name: Build and push image (tagged)
    if: type != pull_request AND branch =~ ^v AND tag IS present AND repo = tyslinchain/tyslinscan
  - name: Deploy in devnet
    if: type != pull_request AND branch = master AND repo = tyslinchain/tyslinscan
  - name: Deploy in testnet
    if: type != pull_request AND branch =~ ^v AND tag IS present AND repo = tyslinchain/tyslinscan
